---
title: "Introduccion a Python-Estadistica."
format: pdf
editor: visual
jupyter: python3
lang: es-ES
toc: true
editor_options: 
  chunk_output_type: console
---

\newpage

# Introduccion a estadistica con Python.  

## Seleccionar filas con iloc.

```{python}

import pandas as pd
import numpy as np
technologies = {
    'Courses':["Spark","PySpark","Hadoop","Python","pandas","Oracle","Java"],
    'Fee' :[20000,25000,26000,22000,24000,21000,22000],
    'Duration':['30days','40days','35days','40days',np.nan,None,'55days'],
    'Discount':[1000,2300,1500,1200,2500,2100,2000]
               }
index_labels=['r1','r2','r3','r4','r5','r6','r7']
df = pd.DataFrame(technologies,index=index_labels)
print(df)

```

```{python}
print(df.iloc[2])
```

```{python}

# Select Rows by Index List
print(df.iloc[[2,3,6]])
# Outputs
#   Courses    Fee Duration  Discount
#r3  Hadoop  26000   35days      1500
#r4  Python  22000   40days      1200
#r7    Java  22000   55days      2000

```

```{python}
print(df.iloc[1:5])
```

```{python}
print(df.iloc[:1])
```

```{python}
print(df.iloc[:3])
```

```{python}
print(df.iloc[-1:])
```

```{python}
print(df.iloc[-3:])
```

```{python}
print(df.iloc[::2])
```

## Seleccionar filas con loc.

```{python}
print(df.loc['r2'])
```

```{python}
print(df.loc[['r2','r3','r6']])
```

```{python}

# Select Rows by Label Index Range
print(df.loc['r1':'r5'])
# Outputs
#    Courses    Fee Duration  Discount
#r1    Spark  20000   30days      1000
#r2  PySpark  25000   40days      2300
#r3   Hadoop  26000   35days      1500
#r4   Python  22000   40days      1200
#r5   pandas  24000      NaN      2500

# Select Alternate Rows with in Index Labels
print(df.loc['r1':'r5':2])
# Outputs
#   Courses    Fee Duration  Discount
#r1   Spark  20000   30days      1000
#r3  Hadoop  26000   35days      1500
#r5  pandas  24000      NaN      2500

```

## Seleccionar columnas.  

```{python}
df2=df[['Courses','Fee','Duration']]
print(df2)
```

```{python}

import pandas as pd
technologies = ({
  'Courses':["Spark","PySpark","Hadoop","Python","pandas","Oracle","Java"],
  'Fee' :[20000,25000,26000,22000,24000,21000,22000],
  'Duration':['30day', '40days' ,'35days', '40days', '60days', '50days', '55days']
              })
df = pd.DataFrame(technologies)
print(df.columns)

```

```{python}

import pandas as pd
technologies = ({
    'Courses':["Spark","PySpark","Hadoop","Python","pandas","Oracle","Java"],
    'Fee' :[20000,25000,26000,22000,24000,21000,22000],
    'Duration':['30day', '40days' ,'35days', '40days', '60days', '50days', '55days']
              })
df = pd.DataFrame(technologies)
print(df)

# Drop single column by Name
df2=df.drop(["Fee"], axis = 1)
print(df2)

df2=df.drop(columns=["Fee"], axis = 1)
print(df2)

df2=df.drop(labels=["Fee"], axis = 1)
print(df2)

# Drop column by index
df2=df.drop(df.columns[1], axis = 1)
print(df2)

# Drop multiple columns by Name
df2=df.drop(["Courses", "Fee"], axis = 1)
print(df2)

# Drop multiple columns by Index
df2=df.drop(df.columns[[0,1]], axis = 1)
print(df2)

# Drop Columns from List
lisCol = ["Courses","Fee"]
df2=df.drop(lisCol, axis = 1)
print(df2)

# Drop columns between two columns
df2=df.drop(df.loc[:, 'Courses':'Fee'].columns, axis = 1)
print(df)

df.drop(df.iloc[:, 1:2], inplace=True, axis=1)
print(df)

# Drop columns by condition
for col in df.columns:
    if 'Fee' in col:
                del df[col]
print(df)

```
